#goal is to query quality functions
#credit to @fictionlab and the Marvelmind team

from marvelmind import MarvelmindHedge
from time import sleep
import sys
import numpy as np
import matplotlib.pyplot as plt

def graph(data):
    # Extract individual columns
    address = data[:, 0]  # First column (address)
    quality = data[:, 1]  # Second column (quality)

    plt.plot(address, quality, label="Quality", marker='o')

    # Add labels and legend
    plt.xlabel("Address")
    plt.ylabel("Quality")
    plt.title("Address vs. Quality for Marvelmind Drone Querying")
    plt.legend()  # Show legend

    plt.show()

def main():
    hedge = MarvelmindHedge(tty = "/dev/ttyACM0", adr=None, debug=False) # create MarvelmindHedge thread
    
    if (len(sys.argv)>1):
        hedge.tty= sys.argv[1]
    
    hedge.start() # start thread
    #creating an array to store quality data
    quality=[]
    while True:
        try:
            hedge.dataEvent.wait(1)
            hedge.dataEvent.clear()
            if (hedge.qualityUpdated):
                quality.append(hedge.quality)
                hedge.print_quality()
                
        except KeyboardInterrupt:
            hedge.stop()  # stop and close serial port
            sys.exit()
            graph(quality)
main()
