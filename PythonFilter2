#gist of the code is to remove values that fall below a quality threshold
#credit to @fictionlab and the Marvelmind team

from marvelmind import MarvelmindHedge
from time import sleep
import sys
import pandas as pd 
import matplotlib.pyplot as plt

def main():
    hedge = MarvelmindHedge(tty = "/dev/ttyACM0", adr=None, debug=False) # create MarvelmindHedge thread
    
    if (len(sys.argv)>1):
        hedge.tty= sys.argv[1]
    
    hedge.start() # start thread

    #an array that holds all of the position data [x, y, z, time] 
    #an array that holds all of the "filtered" data values

    hedge_pos = pd.DataFrame(columns=["X", "Y","Z", "Time"])  # List to store position data  
    hedge_pos_filter = pd.DataFrame(columns=["X", "Y","Z", "Time"])  # List to store filtered-position data 
    #threshold percentage for what values aren't considered
    threshold_val=70

    while True:
        try:
            hedge.dataEvent.wait(1)
            hedge.dataEvent.clear()

            if (hedge.positionUpdated):
              hedge_pos.append(hedge.position)
                #converting quality array into just the numerical value
                if(hedge.qualityUpdated):
                  #from quality(self)=[address, quality]
                  quality=float(hedge.quality[1])
                  
                  if hedge.quality >= threshold_val:
                    hedge_pos_filter = pd.concat([hedge_pos, pd.DataFrame([hedge], columns=["X", "Y", "Z", "Time"])], ignore_index=True)
                    #print command may not work
                    hedge.print_position()
                    
    
        except KeyboardInterrupt:
            hedge.stop()  # stop and close serial port
            sys.exit()
            #copy over all x,y,z,and time values
            # Extract individual columns
            x_vals = data["X"]  # First column (x)
            y_vals = data["Y"]  # Second column (y)
            z_vals = data["Z"]  # Third column (z)
            time_vals = data["Time"]  # Fourth column (time)

main()

