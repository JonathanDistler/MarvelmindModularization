gist of the code is to average the last 5 values and print that value

from marvelmind import MarvelmindHedge
from time import sleep
import sys
import pandas as pd

def main():
    hedge = MarvelmindHedge(tty = "/dev/ttyACM0", adr=None, debug=False) # create MarvelmindHedge thread
    
    if (len(sys.argv)>1):
        hedge.tty= sys.argv[1]
    
    hedge.start() # start thread
    #an array that holds all of the position data [x, y, z, time]
    #trying to initialize the array without any values
    #an array that holds the filtered data
    hedge_pos=pd.array(index=['x', 'y', 'z','t'])
    hedge_pos_filter=pd.array(index=['x', 'y', 'z','t'])

    #threshold percentage for what values aren't considered
    threshold_val=70
    while True:
        try:
            hedge.dataEvent.wait(1)
            hedge.dataEvent.clear()

            if (hedge.positionUpdated):
              hedge_pos.append(hedge.position)
                #converting quality array into just the numerical value
                if(hedge.qualityUpdated):
                  quality=float(hedge.quality[1])
                  
                  if hedge.quality >= threshold_val:
                    hedge_pos_filter.append(hedge.position)
                    #print command may not work
                    hedge.print_position(hedge.position)
                    
    
        except KeyboardInterrupt:
            hedge.stop()  # stop and close serial port
            sys.exit()
main()
#don't know whether this should be inside or outside of the "main" code
#x_vals=hedge_pos[:,0]
#y_vals=hedge_pos[:,1]
#z_vals=hedge_pos[:,2]
#time_vals=hedge_pos[:,3]

#gist of the code is to disregard values if their quality is over a certain value (i.e. 80 percent)
  if self.quality is<70
    else
      add to list
