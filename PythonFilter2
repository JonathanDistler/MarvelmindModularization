#gist of the code is to remove values that fall below a quality threshold
#credit to @methylDragon and the Marvelmind team

from marvelmind import MarvelmindHedge
from time import sleep
import sys
import numpy as np
import matplotlib.pyplot as plt

def main():
    hedge = MarvelmindHedge(tty = "/dev/ttyACM0", adr=None, debug=False) # create MarvelmindHedge thread
    
    if (len(sys.argv)>1):
        hedge.tty= sys.argv[1]
    
    hedge.start() # start thread

    #an array that holds all of the position data [x, y, z, time] 
    #an array that holds all of the "filtered" data values

    hedge_pos = []  # List to store position data
    hedge_pos_filter=[] #List to store filtered-position-data

    #threshold percentage for what values aren't considered
    threshold_val=70

    while True:
        try:
            hedge.dataEvent.wait(1)
            hedge.dataEvent.clear()

            if (hedge.positionUpdated):
              hedge_pos.append(hedge.position)
                #converting quality array into just the numerical value
                if(hedge.qualityUpdated):
                  quality=float(hedge.quality[1])
                  
                  if hedge.quality >= threshold_val:
                    hedge_pos_filter.append(hedge.position)
                    #print command may not work
                    hedge.print_position()
                    
    
        except KeyboardInterrupt:
            hedge.stop()  # stop and close serial port
            sys.exit()
            #copy over all x,y,z,and time values
            #x_vals=hedge_pos_filter[:,0]
            #y_vals=hedge_pos_filter[:,1]
            #z_vals=hedge_pos_filter[:,2]
            #time_vals=hedge_pos_filter[:,3]

main()

