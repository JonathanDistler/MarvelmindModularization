#gist of the code is to average the last x-number of values and print that average value
#could benefit from having a higher refresh rate to make up for the average time steps and positional data
#credit to @methylDragon and the Marvelmind team

from marvelmind import MarvelmindHedge
from time import sleep
import sys
import numpy as np
import matplotlib.pyplot as plt

def main():
    hedge = MarvelmindHedge(tty = "/dev/ttyACM0", adr=None, debug=False) # create MarvelmindHedge thread
    
    if (len(sys.argv)>1):
        hedge.tty= sys.argv[1]
    
    hedge.start() # start thread

    #an array that holds all of the position data [x, y, z, time] 
    #an array that holds all of the "filtered" data values

    hedge_pos = []  # List to store position data
    hedge_pos_filter=[] #List to store filtered-position-data
    sum_count=5

    while True:
        try:
            hedge.dataEvent.wait(1)
            hedge.dataEvent.clear()

            if (hedge.positionUpdated):

                hedge_pos.append(hedge.position)
                if (len(hedge_pos)>=sum_count):
                  sum=[]

                  for i in range(sum_count):
                    sum+=hedge_pos[end-i:,0]
                    hedge_pos_filter.append(sum/5)
                    #might require a new command to print position
                    hedge.print_position(sum/5)
    
        except KeyboardInterrupt:
            hedge.stop()  # stop and close serial port
            sys.exit()
            #copy over all x,y,z,and time values
            #x_vals=hedge_pos_filter[:,0]
            #y_vals=hedge_pos_filter[:,1]
            #z_vals=hedge_pos_filter[:,2]
            #time_vals=hedge_pos_filter[:,3]
main()
