#gist of the code is to average the last x-number of values and print that average value
#could benefit from having a higher refresh rate to make up for the average time steps and positional data
#credit to @fictionlab and the Marvelmind team

from marvelmind import MarvelmindHedge
from time import sleep
import sys
import pandas as pd 
import matplotlib.pyplot as plt

def main():
    hedge = MarvelmindHedge(tty = "/dev/ttyACM0", adr=None, debug=False) # create MarvelmindHedge thread
    
    if (len(sys.argv)>1):
        hedge.tty= sys.argv[1]
    
    hedge.start() # start thread

    #an array that holds all of the position data [x, y, z, time] 
    #an array that holds all of the "filtered" data values

    hedge_pos=pd.DataFrame(columns=["X","Y","Z","Time"]) #List to store positional data
    hedge_pos_filter=pd.DataFrame(columns=["X","Y","Z","Time"]) #List to store positional data

    while True:
        try:
            hedge.dataEvent.wait(1)
            hedge.dataEvent.clear()

            #appending the position data to a new list to be examined later
            if (hedge.positionUpdated):
            	
            	#pulls data from the hedge object, and then appends it to a pre-existing dataframe for position and time
            	x=hedge.position()[1]
            	y=hedge.position()[2]
            	z=hedge.position()[3]
            	t=hedge.position()[4]
            	new_row=pd.DataFrame({"X":[x],"Y":[y],"Z":[z],"Time":[t]})
            	hedge_pos=pd.concat([hedge_pos,new_row])

                if (len(hedge_pos)>=sum_count):
                    avg = hedge_pos.iloc[-sum_count:].mean()
                    #avg_df=pd.DataFrame({"X":[x],"Y":[y],"Z":[z],"Time":[t]})
                    hedge_pos_filter = pd.concat([hedge_pos_filter, avg], ignore_index=True)
                    #can't use previously created functions. This should just print the averaged value to terminal
                    print(avg)
    
        except KeyboardInterrupt:
            hedge.stop()  # stop and close serial port
            sys.exit()
            #copy over all x,y,z,and time values
            #x_vals=hedge_pos_filter["X"]
            #y_vals=hedge_pos_filter["Y"]
            #z_vals=hedge_pos_filter["Z"]
            #time_vals=hedge_pos_filter["Time"]
main()
