#credit to @methylDragon and the Marvelmind team

from marvelmind import MarvelmindHedge
from time import sleep
import sys
import numpy as np
import matplotlib.pyplot as plt

def graph(data):
    # Extract individual columns
    x_vals = data[:, 0]  # First column (x)
    y_vals = data[:, 1]  # Second column (y)
    z_vals = data[:, 2]  # Third column (z)
    time_vals = data[:, 3]  # Fourth column (time)

    plt.plot(time_vals, x_vals, label="X values", marker='o')
    plt.plot(time_vals, y_vals, label="Y values", marker='s')
    plt.plot(time_vals, z_vals, label="Z values", marker='^')

    # Add labels and legend
    plt.xlabel("Time")
    plt.ylabel("Position")
    plt.title("X, Y, and Z positions over Time for Marvelmind Drone Querying")
    plt.legend()  # Show legend

    plt.show()
    
def main():
    hedge = MarvelmindHedge(tty = "/dev/ttyACM0", adr=None, debug=False) # create MarvelmindHedge thread
    
    if (len(sys.argv)>1):
        hedge.tty= sys.argv[1]
    
    hedge.start() # start thread

    #an array that holds all of the position data [x, y, z, time]
    #trying to initialize the array without any values
    
    hedge_pos = []  # List to store position data

    while True:
        try:
            hedge.dataEvent.wait(1)
            hedge.dataEvent.clear()

            #appending the position data to a new list to be examined later
            if (hedge.positionUpdated):
                #could try to append into their own lists, or could try to print/show the data piece by piece
                hedge_pos.append(hedge.position)
                hedge.print_position()
    
        except KeyboardInterrupt:
            hedge.stop()  # stop and close serial port
            sys.exit()
            #The goal is to get the x,y,z and time-vals to graph the data and compare to real-world data
            # Convert to NumPy array
            hedge_pos_array = np.array(hedge_pos)
            graph(hedge_pos_array)

main()
