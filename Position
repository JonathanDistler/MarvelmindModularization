#goal is to query positional data, with a created function to graph the data
#credit to @fictionlab and the Marvelmind team

from marvelmind import MarvelmindHedge
from time import sleep
import sys
import pandas as pd 
import matplotlib.pyplot as plt

def graph(data):
    # Extract individual columns
    x_vals = data["X"]  # First column (x)
    y_vals = data["Y"]  # Second column (y)
    z_vals = data["Z"]  # Third column (z)
    time_vals = data["Time"]  # Fourth column (time)

    plt.plot(time_vals, x_vals, label="X values", marker='o')
    plt.plot(time_vals, y_vals, label="Y values", marker='s')
    plt.plot(time_vals, z_vals, label="Z values", marker='^')

    # Add labels and legend
    plt.xlabel("Time")
    plt.ylabel("Position")
    plt.title("X, Y, and Z positions over Time for Marvelmind Drone Querying")
    plt.legend()  # Show legend

    plt.show()
    
def main():
    hedge = MarvelmindHedge(tty = "/dev/ttyACM0", adr=None, debug=False) # create MarvelmindHedge thread
    
    if (len(sys.argv)>1):
        hedge.tty= sys.argv[1]
    
    hedge.start() # start thread

    #an array that holds all of the position data [x, y, z, time]
    #trying to initialize the array without any values
    
    hedge_pos = pd.DataFrame(columns=["X", "Y","Z", "Time"])  # List to store position data

    while True:
        try:
            hedge.dataEvent.wait(1)
            hedge.dataEvent.clear()

            #appending the position data to a new list to be examined later
            if (hedge.positionUpdated):
                #trying to append a new row of data beneath the previous row of data for the hedge_position dataframe
                hedge_pos = pd.concat([hedge_pos, pd.DataFrame([hedge], columns=["X", "Y", "Z", "Time"])], ignore_index=True)
                hedge.print_position()
    
        except KeyboardInterrupt:
            hedge.stop()  # stop and close serial port
            sys.exit()
            #The goal is to get the x,y,z and time-vals to graph the data and compare to real-world data
            graph(hedge_pos)

main()
